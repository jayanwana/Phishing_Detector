{"version":3,"file":"popup.689c0d456cd72aca41a1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;AAGA;AACA;AACA;AAGA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAtCA;;AAwCA;AAAA;;;;;;;;;;AAxCA;;;;;;;;;;;;;;;;;ACLA","sources":["webpack://phishing-detector/./src/pages/Popup/Popup.jsx","webpack://phishing-detector/webpack/runtime/getFullHash"],"sourcesContent":["// Import Libraries\r\nimport React, { useState } from 'react';\r\nimport './Popup.css';\r\n\r\n// Create the Popup component\r\nconst Popup = () => {\r\n  // create stateful variables to store the results of the classification\r\n  const [ response, _setResponse ] = useState({})\r\n\r\n  // Callback function that stores the result in the stateful variable\r\n  const setResponse = (res) => {\r\n    _setResponse(res)\r\n  }\r\n\r\n  // This function is called whenever the button is clicked on the popup.catch\r\n  // Send a message to the content page which has access to the email page DOM\r\n  // to scrape the email text and send to the back end for classification\r\n  // Also, it sends the callback function to the backend to collect the result\r\n  const scrapeMail = () => {\r\n    chrome.tabs.query({active:true, currentWindow: true}, (tabs) => {\r\n      const activeTab = tabs[0]\r\n      chrome.tabs.sendMessage(activeTab.id, {command: \"scrapeMail\"}, setResponse)\r\n    })\r\n  }\r\n  // This is what gets rendered on the popup tab\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Click here to classify the email as Phishing or non-phishing</p>\r\n        <button onClick={scrapeMail}>Classify Mail!</button>\r\n        {response?.error && (\r\n          <p> An error occurred</p>\r\n        )}\r\n        {response?.result && (\r\n          <>\r\n          <h4>Result</h4>\r\n          <p> The email: \"{response?.email.slice(0,50)}...\" was classified as</p>\r\n          <p>{response.result === '0' ? 'A Non-Phishing email' : 'A Phishing email'}</p>\r\n          </>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","__webpack_require__.h = () => (\"70a2ebb9985c49abdcb7\")"],"names":[],"sourceRoot":""}